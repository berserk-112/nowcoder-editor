
plugins {
    id 'java-library'
    id 'org.jetbrains.intellij' version '1.13.0'
    id "de.undercouch.download" version "4.0.2"
}
/*
apply plugin: "java-library"
apply plugin: "de.undercouch.download"
apply plugin: "org.jetbrains.intellij"
*/

group 'com.berserk112.nowcoder'
version (System.getenv('LD_VERSION')==null ? project.plugin_version :System.getenv('LD_VERSION')) + (project.build_env.isEmpty() ? "" : "-") + project.build_env

sourceCompatibility = 11
targetCompatibility = 11

/*
repositories {
    jcenter {
        url "http://jcenter.bintray.com/"
    }
}
*/
repositories {
    mavenCentral()
}

dependencies {
    api 'com.alibaba:fastjson:1.2.47'
    api 'org.jsoup:jsoup:1.11.3'
    api('io.sentry:sentry:1.7.9') {
        exclude module: 'slf4j-api'
    }
    api 'org.scilab.forge:jlatexmath:1.0.7'
    api 'org.apache.commons:commons-lang3:3.9'
    api 'com.vladsch.flexmark:flexmark:0.62.2'
    api 'com.vladsch.flexmark:flexmark-ext-attributes:0.62.2'
    api 'io.github.biezhi:TinyPinyin:2.0.3.RELEASE'
    //api fileTree(dir: 'src/main/resources/lib', include: ['*.jar'])

}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    pluginName = 'nowcoder-editor'
    version = project.intellij_version
    type = 'IU'
    downloadSources = true
    updateSinceUntilBuild = false
    buildSearchableOptions.enabled = false
    ideaDependencyCachePath = "$gradle.gradleUserHomeDir/caches/modules-2/files-2.1/"
    runIde {
        jvmArgs = ["-Dfile.encoding=utf-8"]
    }

    listProductsReleases {
        sinceBuild = "2022.3"
    }

    publishPlugin {
        token = System.getenv("ORG_GRADLE_PROJECT_intellijPublishToken")
//        channels = ['stable']
    }
/*    prepareSandbox  {
        from("src/main/natives" + (project.build_env.isEmpty() ? "" : "-") + project.build_env) { into(getPluginName() + '/natives') }
    }*/

}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}


/*
jar {
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}
*/


